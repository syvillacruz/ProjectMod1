pragma solidity ^0.8.0;

contract SimpleToken {
    mapping(address => uint256) public balances;
    uint256 public totalSupply;
    
    constructor(uint256 _initialSupply) {
        totalSupply = _initialSupply;
        balances[msg.sender] = totalSupply;
    }
    
    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balances[msg.sender] >= _value, "Insufficient balance");
        
        balances[msg.sender] -= _value;
        balances[_to] += _value;
        
        assert(balances[msg.sender] <= totalSupply);
        
        return true;
    }
    
    function burn(uint256 _value) public {
        require(balances[msg.sender] >= _value, "Not enough balance");
        
        balances[msg.sender] -= _value;
        
        if (balances[msg.sender] > totalSupply) {
            revert("Burned tokens exceed total supply");
        }
    }
}
